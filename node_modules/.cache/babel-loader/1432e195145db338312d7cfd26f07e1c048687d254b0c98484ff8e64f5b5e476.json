{"ast":null,"code":"var _jsxFileName = \"F:\\\\WEB DEVELOPMENT COURSE\\\\Advanced Client Side Development\\\\Project\\\\First Version\\\\movie-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport MovieList from './components/MovieList';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './views/Home';\nimport Cinema from './views/Cinema';\nimport Netflix from './views/Netflix';\nimport Disney from './views/Disney';\nimport Prime from './views/Prime';\nimport Apple from './views/Apple';\nimport Movie from './views/Movie';\nimport Search from './views/Search';\nimport Watchlist from './views/Watchlist';\nimport Navbar from './components/Navbar';\nimport Dexie from 'dexie';\nimport { useLiveQuery } from \"dexie-react-hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reader = new FileReader();\n\n//Dexie.delete('ImageTest');\n\nconst db = new Dexie('ImageTest');\ndb.version(1).stores({\n  items: \"id, title\"\n});\nconst App = () => {\n  _s();\n  const [cinemaMovies, setCinemaMovies] = useState([]);\n  const [netflixMovies, setNetflixMovies] = useState([]);\n  const [disneyMovies, setDisneyMovies] = useState([]);\n  const [primeMovies, setPrimeMovies] = useState([]);\n  const [appleMovies, setAppleMovies] = useState([]);\n  const [showImage, setShowImage] = useState([]);\n  const allItems = useLiveQuery(() => db.items.toArray(), []);\n  // console.log(allItems);\n  //console.log(showImage);\n  // if (!allItems) return null\n\n  const getImage = async () => {\n    let {\n      data: image\n    } = await axios.get(\"http://image.tmdb.org/t/p/w500/7gc1TPFzM9a3dqbs5gUKAcjKev5.jpg\", {\n      responseType: 'blob'\n    });\n    // if( image ) { return image }\n    if (image) {\n      addItemToDb(image);\n    }\n  };\n  const showImageNow = async () => {\n    const result = allItems.filter(item => item.id === 220378);\n    // if( result )\n    // {\n    //   result[0].image = await reader.readAsDataURL(result[0].image);\n    //   setShowImage(result[0]);      \n    // }\n    console.log(result);\n  };\n  const addItemToDb = async img => {\n    let id = 220378;\n    let title = \"Nathan Rocks\";\n    let image = img;\n    await db.items.add({\n      id,\n      title,\n      image\n    });\n  };\n  const removeItemFromDb = async id => {\n    await db.items.delete(id);\n  };\n\n  // const itemData = allItems.map(({ id, title, image }) => (\n  //   <div key={id}>\n  //     <h2>ID: {id}</h2>\n  //     <h3>Title: {title}</h3>\n  //     <img></img>\n  //     <i onClick={() => removeItemFromDb(id)} className=\"col s2 material-icons delete-button\">\n  //       Delete\n  //     </i>\n  //   </div>\n  // )) \n\n  function getDates(days) {\n    var currentDate = new Date();\n    var currentYear = currentDate.getFullYear();\n    var currentMonth = String(currentDate.getMonth() + 1).padStart(2, '0');\n    var currentDay = String(currentDate.getDate()).padStart(2, '0');\n    var formattedCurrent = `${currentYear}-${currentMonth}-${currentDay}`;\n    var priorDate = new Date(new Date().setDate(currentDate.getDate() - days));\n    var priorYear = priorDate.getFullYear();\n    var priorMonth = String(priorDate.getMonth() + 1).padStart(2, '0');\n    var priorDay = String(priorDate.getDate()).padStart(2, '0');\n    var formattedPrior = `${priorYear}-${priorMonth}-${priorDay}`;\n    return {\n      today: formattedCurrent,\n      prior: formattedPrior\n    };\n  }\n  const getCinema = async dates => {\n    let {\n      data: cinema\n    } = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&region=IE&sort_by=release_date.desc&page=1&release_date.gte=${dates.prior}&release_date.lte${dates.today}&with_release_type=2%7C3`);\n    if (cinema) {\n      return cinema.results;\n    }\n  };\n  function getPlatformID(platform) {\n    switch (platform) {\n      case 'netflix':\n        return 8;\n        break;\n      case 'disney':\n        return 337;\n        break;\n      case 'prime':\n        return 119;\n        break;\n      case 'apple':\n        return 2;\n        break;\n    }\n  }\n  const getStreaming = async (dates, platform) => {\n    let {\n      data: streaming\n    } = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&sort_by=primary_release_date.desc&page=1&primary_release_date.gte=${dates.prior}&primary_release_date.lte=${dates.today}&with_watch_providers=${getPlatformID(platform)}&watch_region=IE`);\n    if (streaming.total_pages > 1) {\n      let streamingMultiPages = streaming.results;\n      for (let x = 2; x <= streaming.total_pages; x++) {\n        let {\n          data: streamingMulti\n        } = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&sort_by=primary_release_date.desc&page=1&page=${x}&primary_release_date.gte=${dates.prior}&primary_release_date.lte=${dates.today}&with_watch_providers=${getPlatformID(platform)}&watch_region=IE`);\n        streamingMultiPages = streamingMultiPages.concat(streamingMulti.results);\n      }\n      return streamingMultiPages.flat();\n      streaming = \"\";\n    }\n    if (streaming) {\n      return streaming.results;\n    }\n  };\n  const getMovieRequest = async () => {\n    var dates = getDates(60);\n    const cinemaResults = await getCinema(dates);\n    setCinemaMovies(cinemaResults);\n    const netflixResults = await getStreaming(dates, 'netflix');\n    setNetflixMovies(netflixResults);\n    const disneyResults = await getStreaming(dates, 'disney');\n    setDisneyMovies(disneyResults);\n    const primeResults = await getStreaming(dates, 'prime');\n    setPrimeMovies(primeResults);\n    const appleResults = await getStreaming(dates, 'apple');\n    setAppleMovies(appleResults);\n  };\n  useEffect(() => {\n    getMovieRequest();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getImage,\n        children: \"Add Item To DB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeItemFromDb(220378),\n        children: \"Remove Item From DB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showImageNow,\n        children: \"Show Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            cinema: cinemaMovies,\n            netflix: netflixMovies,\n            disney: disneyMovies,\n            prime: primeMovies,\n            apple: appleMovies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/cinema\",\n          element: /*#__PURE__*/_jsxDEV(Cinema, {\n            cinema: cinemaMovies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/netflix\",\n          element: /*#__PURE__*/_jsxDEV(Netflix, {\n            netflix: netflixMovies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/disney\",\n          element: /*#__PURE__*/_jsxDEV(Disney, {\n            disney: disneyMovies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/prime\",\n          element: /*#__PURE__*/_jsxDEV(Prime, {\n            prime: primeMovies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/apple\",\n          element: /*#__PURE__*/_jsxDEV(Apple, {\n            apple: appleMovies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movie/:id\",\n          element: /*#__PURE__*/_jsxDEV(Movie, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/search\",\n          element: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/watchlist\",\n          element: /*#__PURE__*/_jsxDEV(Watchlist, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"h0tkwrVyjS1pc/R8N69VTjc7hL8=\", false, function () {\n  return [useLiveQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MovieList","axios","BrowserRouter","Router","Routes","Route","Home","Cinema","Netflix","Disney","Prime","Apple","Movie","Search","Watchlist","Navbar","Dexie","useLiveQuery","jsxDEV","_jsxDEV","reader","FileReader","db","version","stores","items","App","_s","cinemaMovies","setCinemaMovies","netflixMovies","setNetflixMovies","disneyMovies","setDisneyMovies","primeMovies","setPrimeMovies","appleMovies","setAppleMovies","showImage","setShowImage","allItems","toArray","getImage","data","image","get","responseType","addItemToDb","showImageNow","result","filter","item","id","console","log","img","title","add","removeItemFromDb","delete","getDates","days","currentDate","Date","currentYear","getFullYear","currentMonth","String","getMonth","padStart","currentDay","getDate","formattedCurrent","priorDate","setDate","priorYear","priorMonth","priorDay","formattedPrior","today","prior","getCinema","dates","cinema","process","env","REACT_APP_TMDB_KEY","results","getPlatformID","platform","getStreaming","streaming","total_pages","streamingMultiPages","x","streamingMulti","concat","flat","getMovieRequest","cinemaResults","netflixResults","disneyResults","primeResults","appleResults","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","exact","path","element","netflix","disney","prime","apple","_c","$RefreshReg$"],"sources":["F:/WEB DEVELOPMENT COURSE/Advanced Client Side Development/Project/First Version/movie-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport MovieList from './components/MovieList';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './views/Home'\nimport Cinema from './views/Cinema'\nimport Netflix from './views/Netflix'\nimport Disney from './views/Disney'\nimport Prime from './views/Prime'\nimport Apple from './views/Apple'\nimport Movie from './views/Movie'\nimport Search from './views/Search'\nimport Watchlist from './views/Watchlist'\nimport Navbar from './components/Navbar'\n\nimport Dexie from 'dexie';\nimport { useLiveQuery } from \"dexie-react-hooks\";\n\nconst reader = new FileReader();\n\n//Dexie.delete('ImageTest');\n\nconst db = new Dexie('ImageTest');\ndb.version(1).stores(\n  { items: \"id, title\" }\n)\n\nconst App = () => {\n  const [cinemaMovies, setCinemaMovies] = useState([]);\n  const [netflixMovies, setNetflixMovies] = useState([]);\n  const [disneyMovies, setDisneyMovies] = useState([]);\n  const [primeMovies, setPrimeMovies] = useState([]);\n  const [appleMovies, setAppleMovies] = useState([]);\n  const [showImage, setShowImage] = useState([]);\n\n  const allItems = useLiveQuery(() => db.items.toArray(), []);\n  // console.log(allItems);\n  //console.log(showImage);\n  // if (!allItems) return null\n\n  const getImage = async () => {\n    let { data: image } = await axios.get(\"http://image.tmdb.org/t/p/w500/7gc1TPFzM9a3dqbs5gUKAcjKev5.jpg\", {responseType: 'blob'});\n    // if( image ) { return image }\n    if( image ) { addItemToDb(image) }\n    \n  }\n\n  const showImageNow = async () => {\n    const result = allItems.filter(item => item.id === 220378 );\n    // if( result )\n    // {\n    //   result[0].image = await reader.readAsDataURL(result[0].image);\n    //   setShowImage(result[0]);      \n    // }\n    console.log(result);\n  } \n\n  const addItemToDb = async img => {\n      let id = 220378\n      let title = \"Nathan Rocks\"\n      let image = img\n      await db.items.add({ \n        id,\n        title,\n        image\n      })\n    }\n\n  const removeItemFromDb = async id => {\n    await db.items.delete(id)\n  } \n\n  // const itemData = allItems.map(({ id, title, image }) => (\n  //   <div key={id}>\n  //     <h2>ID: {id}</h2>\n  //     <h3>Title: {title}</h3>\n  //     <img></img>\n  //     <i onClick={() => removeItemFromDb(id)} className=\"col s2 material-icons delete-button\">\n  //       Delete\n  //     </i>\n  //   </div>\n  // )) \n\n  function getDates( days )\n  {\n    var currentDate = new Date();\n    \n    var currentYear = currentDate.getFullYear();\n    var currentMonth = String(currentDate.getMonth() + 1).padStart(2, '0');\n    var currentDay = String(currentDate.getDate()).padStart(2, '0');\n    var formattedCurrent = `${currentYear}-${currentMonth}-${currentDay}`; \n    \n    var priorDate = new Date(new Date().setDate(currentDate.getDate() - days));\n    var priorYear = priorDate.getFullYear();\n    var priorMonth = String(priorDate.getMonth() + 1).padStart(2, '0');\n    var priorDay = String(priorDate.getDate()).padStart(2, '0');\n    var formattedPrior = `${priorYear}-${priorMonth}-${priorDay}`;\n    return { today: formattedCurrent, prior: formattedPrior }    \n  }\n\n\n  const getCinema = async (dates) => {\n    let { data: cinema } = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&region=IE&sort_by=release_date.desc&page=1&release_date.gte=${dates.prior}&release_date.lte${dates.today}&with_release_type=2%7C3`);\n    if( cinema ) { return(cinema.results); }\n    \n  }\n\n \n\n\n  function getPlatformID(platform)\n  {\n    switch (platform) \n    {\n      case 'netflix':\n        return 8;\n        break;\n      case 'disney':\n        return 337;\n        break;\n      case 'prime':\n        return 119;\n        break;\n      case 'apple':\n        return 2;\n        break;\n    }\n  }\n\n  const getStreaming = async (dates, platform) => {\n    let { data: streaming } = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&sort_by=primary_release_date.desc&page=1&primary_release_date.gte=${dates.prior}&primary_release_date.lte=${dates.today}&with_watch_providers=${getPlatformID(platform)}&watch_region=IE`);\n      \n    \n    \n    if( streaming.total_pages > 1 ) \n    { \n      let streamingMultiPages = streaming.results;\n      for (let x = 2; x <= streaming.total_pages; x++) \n      {\n        let { data: streamingMulti } = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&sort_by=primary_release_date.desc&page=1&page=${x}&primary_release_date.gte=${dates.prior}&primary_release_date.lte=${dates.today}&with_watch_providers=${getPlatformID(platform)}&watch_region=IE`);\n          streamingMultiPages = streamingMultiPages.concat(streamingMulti.results);\n      }\n      return streamingMultiPages.flat();\n      streaming = \"\";\n    }\n    if( streaming ) { return(streaming.results); }\n  }\n\n\n\n  const getMovieRequest = async () => {\n\n    var dates = getDates(60);\n\n    const cinemaResults = await getCinema(dates);\n    setCinemaMovies(cinemaResults);\n\n    const netflixResults = await getStreaming(dates, 'netflix');\n    setNetflixMovies(netflixResults);\n\n    const disneyResults = await getStreaming(dates, 'disney');\n    setDisneyMovies(disneyResults);\n\n    const primeResults = await getStreaming(dates, 'prime');\n    setPrimeMovies(primeResults);\n\n    const appleResults = await getStreaming(dates, 'apple');\n    setAppleMovies(appleResults);\n\n  };\n\n\n  useEffect(() => {\n    getMovieRequest();\n  }, []);\n\n\n  return (\n    <Router>\n      <div>\n        <Navbar />\n          <button onClick={getImage}>Add Item To DB</button> \n          <button onClick={() => removeItemFromDb(220378)}>Remove Item From DB</button>\n          <button onClick={showImageNow}>Show Image</button>\n\n          <Routes>\n            <Route exact path=\"/\" element={<Home cinema={cinemaMovies} netflix={netflixMovies} disney={disneyMovies} \n                                                 prime={primeMovies} apple={appleMovies} />} />\n            <Route path=\"/cinema\" element={<Cinema cinema={cinemaMovies} />} />\n            <Route path=\"/netflix\" element={<Netflix netflix={netflixMovies} />} />\n            <Route path=\"/disney\" element={<Disney disney={disneyMovies} />} />\n            <Route path=\"/prime\" element={<Prime prime={primeMovies} />} />\n            <Route path=\"/apple\" element={<Apple apple={appleMovies} />} />\n            <Route path=\"/movie/:id\" element={<Movie />} />\n            <Route path=\"/search\" element={<Search />}/>\n            <Route path=\"/watchlist\" element={<Watchlist />}/>\n          </Routes>\n      </div>\n{/*      <div className=\"container\">\n        {allItems.length > 0 &&\n          <div className=\"card white darken-1\">\n            <div className=\"card-content\">\n              <form action=\"#\">\n                { itemData }\n              </form>\n            </div>\n          </div>\n        }\n      </div>*/}\n    </Router>\n  );\n\n \n};\n\nexport default App;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('dexie'), require('react')) : typeof define === 'function' && define.amd ? define(['exports', 'dexie', 'react'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.DexieReactHooks = {}, global.Dexie, global.React));\n})(this, function (exports, dexie, React) {\n  'use strict';\n\n  function _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n      'default': e\n    };\n  }\n  var React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n  function useObservable(observableFactory, arg2, arg3) {\n    // Resolve vars from overloading variants of this function:\n    var deps;\n    var defaultResult;\n    if (typeof observableFactory === 'function') {\n      deps = arg2 || [];\n      defaultResult = arg3;\n    } else {\n      deps = [];\n      defaultResult = arg2;\n    }\n    // Create a ref that keeps the state we need\n    var monitor = React__default[\"default\"].useRef({\n      hasResult: false,\n      result: defaultResult,\n      error: null\n    });\n    // We control when component should rerender. Make triggerUpdate\n    // as examplified on React's docs at:\n    // https://reactjs.org/docs/hooks-faq.html#is-there-something-like-forceupdate\n    var _a = React__default[\"default\"].useReducer(function (x) {\n      return x + 1;\n    }, 0);\n    _a[0];\n    var triggerUpdate = _a[1];\n    // Memoize the observable based on deps\n    var observable = React__default[\"default\"].useMemo(function () {\n      // Make it remember previous subscription's default value when\n      // resubscribing.\n      var observable = typeof observableFactory === 'function' ? observableFactory() : observableFactory;\n      if (!observable || typeof observable.subscribe !== 'function') {\n        if (observableFactory === observable) {\n          throw new TypeError(\"Given argument to useObservable() was neither a valid observable nor a function.\");\n        } else {\n          throw new TypeError(\"Observable factory given to useObservable() did not return a valid observable.\");\n        }\n      }\n      if (!monitor.current.hasResult && typeof window !== 'undefined' // Don't do this in SSR\n      ) {\n        // Optimize for BehaviorSubject and other observables implementing getValue():\n        if (typeof observable.getValue === 'function') {\n          monitor.current.result = observable.getValue();\n          monitor.current.hasResult = true;\n        } else {\n          // Find out if the observable has a current value: try get it by subscribing and\n          // unsubscribing synchronously\n          var subscription = observable.subscribe(function (val) {\n            monitor.current.result = val;\n            monitor.current.hasResult = true;\n          });\n          // Unsubscribe directly. We only needed any synchronous value if it was possible.\n          if (typeof subscription === 'function') {\n            subscription();\n          } else {\n            subscription.unsubscribe();\n          }\n        }\n      }\n      return observable;\n    }, deps);\n    // Integrate with react devtools:\n    React__default[\"default\"].useDebugValue(monitor.current.result);\n    // Subscribe to the observable\n    React__default[\"default\"].useEffect(function () {\n      var subscription = observable.subscribe(function (val) {\n        var current = monitor.current;\n        if (current.error !== null || current.result !== val) {\n          current.error = null;\n          current.result = val;\n          current.hasResult = true;\n          triggerUpdate();\n        }\n      }, function (err) {\n        var current = monitor.current;\n        if (current.error !== err) {\n          current.error = err;\n          triggerUpdate();\n        }\n      });\n      return typeof subscription === 'function' ? subscription // Support observables that return unsubscribe directly\n      : subscription.unsubscribe.bind(subscription);\n    }, deps);\n    // Throw if observable has emitted error so that\n    // an ErrorBoundrary can catch it\n    if (monitor.current.error) throw monitor.current.error;\n    // Return the current result\n    return monitor.current.result;\n  }\n  function useLiveQuery(querier, deps, defaultResult) {\n    return useObservable(function () {\n      return dexie.liveQuery(querier);\n    }, deps || [], defaultResult);\n  }\n  function usePermissions(firstArg, table, obj) {\n    if (!firstArg) throw new TypeError(\"Invalid arguments to usePermissions(): undefined or null\");\n    var db;\n    if (arguments.length >= 3) {\n      if (!('transaction' in firstArg)) {\n        // Using ducktyping instead of instanceof in case there are multiple Dexie modules in app.\n        // First arg is  ensures first arg is a Dexie instance\n        throw new TypeError(\"Invalid arguments to usePermission(db, table, obj): 1st arg must be a Dexie instance\");\n      }\n      if (typeof table !== 'string') throw new TypeError(\"Invalid arguments to usePermission(db, table, obj): 2nd arg must be string\");\n      if (!obj || typeof obj !== 'object') throw new TypeError(\"Invalid arguments to usePermission(db, table, obj): 3rd arg must be an object\");\n      db = firstArg;\n    } else {\n      if (firstArg instanceof dexie.Dexie) throw new TypeError(\"Invalid arguments to usePermission(db, table, obj): Missing table and obj arguments.\");\n      if (typeof firstArg.table === 'function' && typeof firstArg.db === 'object') {\n        db = firstArg.db;\n        obj = firstArg;\n        table = firstArg.table();\n      } else {\n        throw new TypeError(\"Invalid arguments to usePermissions(). \" + \"Expected usePermissions(entity: DexieCloudEntity) or \" + \"usePermissions(db: Dexie, table: string, obj: DexieCloudObject)\");\n      }\n    }\n    if (!('cloud' in db)) throw new Error(\"usePermissions() is only for Dexie Cloud but there's no dexie-cloud-addon active in given db.\");\n    if (!('permissions' in db.cloud)) throw new Error(\"usePermissions() requires a newer version of dexie-cloud-addon. Please upgrade it.\");\n    return useObservable(\n    // @ts-ignore\n    function () {\n      return db.cloud.permissions(obj, table);\n    }, [obj.realmId, obj.owner, table]);\n  }\n  exports.useLiveQuery = useLiveQuery;\n  exports.useObservable = useObservable;\n  exports.usePermissions = usePermissions;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"names":["useObservable","observableFactory","arg2","arg3","deps","defaultResult","monitor","React__default","useRef","hasResult","result","error","_a","useReducer","x","triggerUpdate","observable","useMemo","subscribe","TypeError","current","window","getValue","subscription","val","unsubscribe","useDebugValue","useEffect","err","bind","useLiveQuery","querier","dexie","liveQuery","usePermissions","firstArg","table","obj","db","arguments","length","Dexie","Error","cloud","permissions","realmId","owner"],"sources":["/Users/kevinhorgan/Downloads/movie-app 2/node_modules/dexie-react-hooks/src/useObservable.ts","/Users/kevinhorgan/Downloads/movie-app 2/node_modules/dexie-react-hooks/src/useLiveQuery.ts","/Users/kevinhorgan/Downloads/movie-app 2/node_modules/dexie-react-hooks/src/usePermissions.ts"],"sourcesContent":["import React from 'react';\nexport interface InteropableObservable<T> {\n  subscribe(\n    onNext: (x: T) => any,\n    onError?: (error: any) => any\n  ): (() => any) | { unsubscribe(): any };\n  getValue?(): T;\n}\n\nexport function useObservable<T, TDefault>(\n  observable: InteropableObservable<T>\n): T | undefined;\nexport function useObservable<T, TDefault>(\n  observable: InteropableObservable<T>,\n  defaultResult: TDefault\n): T | TDefault;\nexport function useObservable<T>(\n  observableFactory: () => InteropableObservable<T>,\n  deps?: any[]\n): T | undefined;\nexport function useObservable<T, TDefault>(\n  observableFactory: () => InteropableObservable<T>,\n  deps: any[],\n  defaultResult: TDefault\n): T | TDefault;\nexport function useObservable<T, TDefault>(\n  observableFactory:\n    | InteropableObservable<T>\n    | (() => InteropableObservable<T>),\n  arg2?: any,\n  arg3?: any\n) {\n  // Resolve vars from overloading variants of this function:\n  let deps: any[];\n  let defaultResult: TDefault;\n  if (typeof observableFactory === 'function') {\n    deps = arg2 || [];\n    defaultResult = arg3;\n  } else {\n    deps = [];\n    defaultResult = arg2;\n  }\n\n  // Create a ref that keeps the state we need\n  const monitor = React.useRef({\n    hasResult: false,\n    result: defaultResult as T | TDefault,\n    error: null as any,\n  });\n  // We control when component should rerender. Make triggerUpdate\n  // as examplified on React's docs at:\n  // https://reactjs.org/docs/hooks-faq.html#is-there-something-like-forceupdate\n  const [_, triggerUpdate] = React.useReducer((x) => x + 1, 0);\n\n  // Memoize the observable based on deps\n  const observable = React.useMemo(() => {\n    // Make it remember previous subscription's default value when\n    // resubscribing.\n    const observable =\n      typeof observableFactory === 'function'\n        ? observableFactory()\n        : observableFactory;\n    if (!observable || typeof observable.subscribe !== 'function') {\n      if (observableFactory === observable) {\n        throw new TypeError(\n          `Given argument to useObservable() was neither a valid observable nor a function.`\n        );\n      } else {\n        throw new TypeError(\n          `Observable factory given to useObservable() did not return a valid observable.`\n        );\n      }\n    }\n\n    if (!monitor.current.hasResult &&\n        typeof window !== 'undefined' // Don't do this in SSR\n       ) {\n      // Optimize for BehaviorSubject and other observables implementing getValue():\n      if (typeof observable.getValue === 'function') {\n        monitor.current.result = observable.getValue();\n        monitor.current.hasResult = true;\n      } else {\n        // Find out if the observable has a current value: try get it by subscribing and\n        // unsubscribing synchronously\n        const subscription = observable.subscribe((val) => {\n          monitor.current.result = val;\n          monitor.current.hasResult = true;\n        });\n        // Unsubscribe directly. We only needed any synchronous value if it was possible.\n        if (typeof subscription === 'function') {\n          subscription();\n        } else {\n          subscription.unsubscribe();\n        }\n      }\n    }\n    return observable;\n  }, deps);\n\n  // Integrate with react devtools:\n  React.useDebugValue(monitor.current.result);\n\n  // Subscribe to the observable\n  React.useEffect(() => {\n    const subscription = observable.subscribe(\n      (val) => {\n        const { current } = monitor;\n        if (current.error !== null || current.result !== val) {\n          current.error = null;\n          current.result = val;\n          current.hasResult = true;\n          triggerUpdate();\n        }\n      },\n      (err) => {\n        const { current } = monitor;\n        if (current.error !== err) {\n          current.error = err;\n          triggerUpdate();\n        }\n      }\n    );\n    return typeof subscription === 'function'\n      ? subscription // Support observables that return unsubscribe directly\n      : subscription.unsubscribe.bind(subscription);\n  }, deps);\n\n  // Throw if observable has emitted error so that\n  // an ErrorBoundrary can catch it\n  if (monitor.current.error) throw monitor.current.error;\n\n  // Return the current result\n  return monitor.current.result;\n}\n","import { liveQuery } from 'dexie';\nimport { useObservable } from './useObservable';\n\nexport function useLiveQuery<T>(\n  querier: () => Promise<T> | T,\n  deps?: any[]\n): T | undefined;\nexport function useLiveQuery<T, TDefault>(\n  querier: () => Promise<T> | T,\n  deps: any[],\n  defaultResult: TDefault\n): T | TDefault;\nexport function useLiveQuery<T, TDefault>(\n  querier: () => Promise<T> | T,\n  deps?: any[],\n  defaultResult?: TDefault\n): T | TDefault {\n  return useObservable(\n    () => liveQuery(querier),\n    deps || [],\n    defaultResult as TDefault\n  );\n}\n","import { Dexie } from 'dexie';\nimport { useObservable } from './useObservable';\nimport type { KeyPaths, TableProp } from 'dexie';\n\ninterface DexieCloudEntity {\n  table(): string;\n  realmId: string;\n  owner: string;\n}\n\nexport interface PermissionChecker<T, TableName extends string> {\n  add(...tableNames: TableName[]): boolean;\n  update(...props: KeyPaths<T>[]): boolean;\n  delete(): boolean;\n}\n\nexport function usePermissions<T extends DexieCloudEntity>(\n  entity: T\n): PermissionChecker<\n  T,\n  T extends { table: () => infer TableName } ? TableName : string\n>;\nexport function usePermissions<\n  TDB extends Dexie,\n  T extends { realmId: string; owner: string }\n>(db: TDB, table: TableProp<TDB>, obj: T): PermissionChecker<T, TableProp<TDB>>;\nexport function usePermissions(\n  firstArg:\n    | Dexie\n    | {\n        realmId?: string;\n        owner?: string;\n        table?: () => string;\n        readonly db?: Dexie;\n      },\n  table?: string,\n  obj?: { realmId?: string; owner?: string }\n) {\n  if (!firstArg)\n    throw new TypeError(\n      `Invalid arguments to usePermissions(): undefined or null`\n    );\n  let db: Dexie;\n  if (arguments.length >= 3) {\n    if (!('transaction' in firstArg)) {\n      // Using ducktyping instead of instanceof in case there are multiple Dexie modules in app.\n      // First arg is  ensures first arg is a Dexie instance\n      throw new TypeError(\n        `Invalid arguments to usePermission(db, table, obj): 1st arg must be a Dexie instance`\n      );\n    }\n    if (typeof table !== 'string')\n      throw new TypeError(\n        `Invalid arguments to usePermission(db, table, obj): 2nd arg must be string`\n      );\n    if (!obj || typeof obj !== 'object')\n      throw new TypeError(\n        `Invalid arguments to usePermission(db, table, obj): 3rd arg must be an object`\n      );\n    db = firstArg;\n  } else {\n    if (firstArg instanceof Dexie)\n      throw new TypeError(\n        `Invalid arguments to usePermission(db, table, obj): Missing table and obj arguments.`\n      );\n\n    if (\n      typeof firstArg.table === 'function' &&\n      typeof firstArg.db === 'object'\n    ) {\n      db = firstArg.db!;\n      obj = firstArg;\n      table = firstArg.table();\n    } else {\n      throw new TypeError(\n        `Invalid arguments to usePermissions(). ` +\n          `Expected usePermissions(entity: DexieCloudEntity) or ` +\n          `usePermissions(db: Dexie, table: string, obj: DexieCloudObject)`\n      );\n    }\n  }\n  if (!('cloud' in db))\n    throw new Error(\n      `usePermissions() is only for Dexie Cloud but there's no dexie-cloud-addon active in given db.`\n    );\n  if (!('permissions' in (db as any).cloud))\n    throw new Error(`usePermissions() requires a newer version of dexie-cloud-addon. Please upgrade it.`)\n  return useObservable(\n    // @ts-ignore\n    () => db.cloud.permissions(obj, table),\n    [obj.realmId, obj.owner, table]\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}